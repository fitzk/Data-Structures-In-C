1.	How many cost units are spent in the entire process of performing 
	32 consecutive push operations on an empty array which starts out at 
	capacity 8, assuming that the array will double in capacity each time 
	a new item is added to an already full dynamic array? As N (ie. the 
	number of pushes) grows large, under this strategy for resizing, 
	what is the big-oh complexity for a push?
	capacity = 8
	capacity = 16
	capacity = 32
	1 2 3 4 5 6 7 8
	copy 1-8		9
					 10 11 12 13 14 15 16
										 17 
											18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
	
	8 + 9 + 7 + 17 + 15 = 56 cost units/32 pushes @ initial capacity of 8
	56/32 = 1.75 Average cost
	The worst case big-oh complexity for a push is O(n); the amortized complexity is O(1)+
	
2.	How many cost units are spent in the entire process of performing 32
	consecutive push operations on an empty array which starts out at
	capacity 8, assuming that the array will grow by a constant 2 spaces 	
	each time a new item is added to an already full dynamic array? 
	As N (ie. the number of pushes) grows large, under this strategy for 
	resizing, what is the big-oh complexity for a push?
	(1)--------->(1)
	1 2 3 4 5 6 7 8(n)(1)
					9 10(n)(1)
						11 12
							13 14	
								 15 16
									  17 18
										   19 20
												21 22
													 23 24
														  25 26
															   27 28
																	29 30
																		 31 32
																  
	8 + 9 + 1 + 11 + 1 + 13 + 1 + 15 + 1 + 17 + 1 + 19 
	+ 1 + 21 + 1 + 23 + 1 + 25 + 1 + 27 + 1 + 29 + 1 + 31 + 1 
	= 260 cost units/32 pushes @ initial capacity of 8
	= O(n) worst case
	= O(1)+ amortized 
	
3.	Suppose that a dynamic array stack doubles its capacity when it is full,
	and shrinks (on Pop only) its capacity by half when the array is half 
	full or less. Can you devise a sequence of N push() and pop() 
	operations which will result in poor performance (O(N^2) total cost)? 
	How might you adjust the array's shrinking policy to avoid this? 
	(Hint: You may assume that the initial capacity of the array is N/2.)
	
	I don't know how to answer this but I would really like to see the solution.
	